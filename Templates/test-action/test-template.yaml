apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta3-demo
  title: Test Action template
  description: scaffolder v1beta3 template demo
spec:
  owner: team-b
  type: service

  # these are the steps which are rendered in the frontend with the form input -> can include fields for custom file actions here
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            # Here's the option you can pass to the RepoUrlPicker
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
              additionalScopes:
                github:
                  - workflow
            allowedHosts:
              - github.com
  # here's the steps that are executed in series in the scaffolder backend -> include your custom actions here
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
    ## work here
    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./
        url: https://github.com/DonovanVA/test-action-react-template
    ## Include your create new file action in this region
    - id: create-file
      name: Create File
      action: acme:file:create ## (custom action) maps to the id of the create file action
      input: ## (custom action) maps to the "contents and "filename" fields of the properties segment in the createNewFileAction field under schema
        contents: | 
          # Use an official Node.js runtime as the base image
          FROM node:14

          # Set the working directory in the container
          WORKDIR /app

          # Copy package.json and package-lock.json to the container
          COPY package*.json ./

          # Install app dependencies
          RUN npm install

          # Copy the rest of the application code to the container
          COPY . .

          # Build the React app
          RUN npm run build

          # Expose the port your app will run on (default is 3000)
          EXPOSE 3000

          # Start the React app
          CMD ["npm", "start"]
        
        filename: Dockerfile
    ## overwrite existing file
    - id: overwrite-file
      name: Overwrite file
      action: roadiehq:utils:fs:write
      input:
        path: /src/App.tsx
        content: | 
          import React from 'react';
          import logo from './logo.svg';
          import './App.css';

          function App() {
            return (
              <div className="App">
                <header className="App-header">
                  <img src={logo} className="App-logo" alt="logo" />
                  <p>
                    Edit <code>${{ parameters.name }}</code> and save to reload.
                  </p>
                  <a
                    className="App-link"
                    href="https://reactjs.org"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    Learn React
                  </a>
                </header>
              </div>
            );
          }

          export default App;
    ## overwrite existing file

      ## publish params
    - id: publish
      name: Publish
      action: publish:github
      input: 
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        # here's where the secret can be used
        token: ${{ secrets.USER_OAUTH_TOKEN }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: https://github.com/DonovanVA/testComponentBackstage/tree/main
        catalogInfoPath: "/Templates/test-action/catalog-info.yaml"
