apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta3-demo
  title: Test Action template
  description: scaffolder v1beta3 template demo
spec:
  owner: team-b
  type: service

  # these are the steps which are rendered in the frontend with the form input -> can include fields for custom file actions here
  parameters:
    - title: Name of your application
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component (This will also be defaulted to container name)
          maxLength: 30
          pattern: "^[^'\"]*$" ## no inverted commm
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: FQDN
      required:
        - fqdn
      properties:
        fqdn:
          title: Fully Qualified Domain Name
          type: string
          description: The name of your fqdn for your app to be serviced on
          pattern: "^[^'\"]*$"
          ui:options:
            rows: 3
    - title: Cluster name
      required:
        - clustername
      properties:
        clustername:
          title: Cluster name
          type: string
          description: The name of your cluster for your app to be deployed
          maxLength: 30
          pattern: "^[^'\"]*$"
          ui:options:
            rows: 3
    - title: Resource Group name
      required:
        - resource_group
      properties:
        resource_group:
          title: Resource Group name
          type: string
          description: The resource group of your cluster
          maxLength: 30
          pattern: "^[^'\"]*$"
          ui:options:
            rows: 3

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            # Here's the option you can pass to the RepoUrlPicker
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
              additionalScopes:
                github:
                  - workflow
            allowedHosts:
              - github.com

  ## 1. here's the steps that are executed in series in the scaffolder backend -> include your custom actions here
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
    ## 2. Fetch the template then save it in the working dir
    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./
        url: https://github.com/DonovanVA/test-action-react-template
    ## 3. Include your create new file action in this region
    - id: create-file
      name: Create File
      action: acme:file:create ## (custom action) maps to the id of the create file action
      input: ## (custom action) maps to the "contents and "filename" fields of the properties segment in the createNewFileAction field under schema
        contents: |
          # Use an official Node.js runtime as the base image
          FROM node:14

          # Set the working directory in the container
          WORKDIR /app

          # Copy package.json and package-lock.json to the container
          COPY package*.json ./

          # Install app dependencies
          RUN npm install

          # Copy the rest of the application code to the container
          COPY . .

          # Build the React app
          RUN npm run build

          # Expose the port your app will run on (default is 3000)
          EXPOSE 3000

          # Start the React app
          CMD ["npm", "start"]

        filename: Dockerfile
    ##4. Replace text in file
    - id: Replace text in file
      name: Replace
      action: roadiehq:utils:fs:replace
      input:
        files:
          ## 1. Label the app
          - file: "./src/App.tsx" ## file name to introspect
            find: "src/App.tsx" ## expression to be replaced
            replaceWith: ${{ parameters.name }} ## the text to be replaced with
            ## 2. Build image specs
          - file: "./.github/workflows/01-start-build-and-push-image.yml"
            find: "<parameters.name>"
            replaceWith: ${{ parameters.name }}
            ## 3. Deploy specs
          - file: "./deployments/deploy.yaml"
            find: "<parameters.fqdn>"
            replaceWith: ${{ parameters.fqdn }}
          - file: "./deployments/deploy.yaml"
            find: "<parameters.name>"
            replaceWith: ${{ parameters.name }}
            ## 4. kube specs
          - file: "./.github/workflows/02-apply-deploy.yml"
            find: "<parameters.resource_group>"
            replaceWith: ${{ parameters.resource_group }}
          - file: "./.github/workflows/02-apply-deploy.yml"
            find: "<parameters.clustername>"
            replaceWith: ${{ parameters.clustername }}

    ##5. publish params
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        # here's where the secret can be used
        token: ${{ secrets.USER_OAUTH_TOKEN }}
      ##6. register
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: https://github.com/DonovanVA/testComponentBackstage/tree/main
        catalogInfoPath: "/Templates/test-action/catalog-info.yaml"
    ##5. build and push using gh actions

    - id: Execute gh action
      name: Execute GitHub Action
      action: bs:trigger-webhook
      input:
        url: https://api.github.com/repos/DonovanVA/test-action-react-template/dispatches
        payload: |
          {
            "event_type": "00-retrieve-secrets",
            "client_payload": {
              "repo_url": "https://${{ parameters.repoUrl | replace('https://github.com/', '') | replace('?owner=', '/') | replace('&repo=', '/') }}",
              "github_token": "${{ secrets.USER_OAUTH_TOKEN }}"
            }
          }
        token: ${{ secrets.USER_OAUTH_TOKEN }}

    ##5. build and push using gh actions
